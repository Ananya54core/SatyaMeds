#include <SPI.h>
#include <MFRC522.h>
#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <WiFiClientSecure.h>

// Define MFRC522 pins
#define SS_PIN D4
#define RST_PIN D3

MFRC522 mfrc522(SS_PIN, RST_PIN);  // Create MFRC522 instance

// Wi-Fi credentials
const char* ssid = "hackCBS_1";
const char* password = "hackcbs@7";

// Google Apps Script URL
const String scriptURL = "https://script.google.com/macros/s/AKfycbyx17eWmd03YMDlPNYAwgSWx19upsJupBn0WZjlC36RqoA8Rkl0ZWBucgOkQVVZsl1s/exec";

WiFiClientSecure client;

void setup() {
  Serial.begin(9600);
  SPI.begin();  // Initialize SPI bus
  mfrc522.PCD_Init();  // Initialize RFID module
  Serial.println("Place your RFID card near the reader...");

  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected to WiFi");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());
}

void sendUIDToGoogleSheet(String uid) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;

    // Replace spaces with '%20' for URL encoding
    uid.replace(" ", "%20");

    String url = scriptURL + "?cardID=" + uid;
    Serial.print("Connecting to Google Script: ");
    Serial.println(url);

    client.setInsecure(); // For testing, bypass SSL certificate validation
    http.setTimeout(15000);  // Increase timeout

    if (http.begin(client, url)) {
      int httpResponseCode = http.GET();

      if (httpResponseCode > 0) {
        Serial.println("Data sent successfully to Google Sheet.");
        String response = http.getString();
        Serial.println("Response: " + response);
      } else {
        Serial.print("Error in sending data. HTTP response code: ");
        Serial.println(httpResponseCode);
      }

      http.end();
    } else {
      Serial.println("Failed to initiate HTTP connection.");
    }
  } else {
    Serial.println("WiFi not connected.");
  }
}

void loop() {
  if (!mfrc522.PICC_IsNewCardPresent() || !mfrc522.PICC_ReadCardSerial()) {
    return;
  }

  // Read UID from the card and format it
  String uid = "";
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    uid += String(mfrc522.uid.uidByte[i] < 0x10 ? "0" : "");
    uid += String(mfrc522.uid.uidByte[i], HEX);
    if (i < mfrc522.uid.size - 1) uid += " ";
  }

  Serial.print("Card UID: ");
  Serial.println(uid);

  sendUIDToGoogleSheet(uid);

  delay(1500);  // Add delay to prevent multiple reads
  mfrc522.PICC_HaltA();  // Halt PICC
}
